 Scenario 1: ProcessMonthlyInterest for Savings Accounts

CREATE OR REPLACE PROCEDURE ProcessMonthlyInterest IS
BEGIN
    UPDATE Accounts
    SET Balance = Balance * 1.01
    WHERE AccountType = 'SAVINGS';

    COMMIT;
END;
-----------------------------------------------------------------------
Scenario 2: UpdateEmployeeBonus Based on Department and Bonus %

CREATE OR REPLACE PROCEDURE UpdateEmployeeBonus(
    p_DepartmentID IN NUMBER,
    p_BonusPercent IN NUMBER -- e.g., pass 10 for 10%
) IS
BEGIN
    UPDATE Employees
    SET Salary = Salary + (Salary * p_BonusPercent / 100)
    WHERE DepartmentID = p_DepartmentID;

    COMMIT;
END;
----------------------------------------------------------------------
 Scenario 3: TransferFunds Between Two Account

CREATE OR REPLACE PROCEDURE TransferFunds(
    p_FromAccountID IN NUMBER,
    p_ToAccountID IN NUMBER,
    p_Amount IN NUMBER
) IS
    v_FromBalance NUMBER;
BEGIN
    -- Check if source account has enough funds
    SELECT Balance INTO v_FromBalance
    FROM Accounts
    WHERE AccountID = p_FromAccountID
    FOR UPDATE;

    IF v_FromBalance < p_Amount THEN
        RAISE_APPLICATION_ERROR(-20001, 'Insufficient funds in source account.');
    END IF;

    -- Deduct from source
    UPDATE Accounts
    SET Balance = Balance - p_Amount
    WHERE AccountID = p_FromAccountID;

    -- Add to destination
    UPDATE Accounts
    SET Balance = Balance + p_Amount
    WHERE AccountID = p_ToAccountID;

    -- Optionally, log transaction
    INSERT INTO Transactions (TransactionID, FromAccountID, ToAccountID, Amount, TransactionDate)
    VALUES (Transactions_seq.NEXTVAL, p_FromAccountID, p_ToAccountID, p_Amount, SYSDATE);

    COMMIT;
END;
